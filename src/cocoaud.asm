	NAM	CoCoAud
	TTL	Audio player for CoCo

LOAD	EQU	$0E00		Actual load address for binary

IRQADR	EQU	$5F66
SAMR1ST	EQU	$FFD9

TIMEVAL	EQU	648

	ORG	LOAD

* Disable IRQ and FIRQ
EXEC	ORCC	#$50
* Disable PIA IRQ generation
	LDX	#$FF00
	LDA	1,X
	ANDA	#$3E
	STA	1,X
	LDA	,X
	LDA	3,X
	ANDA	#$3E
	STA	3,X
	LDA	2,X

* High-speed poke...definitely...
	STA	SAMR1ST

* Select DAC sound output
	LDA	$FF01
	ANDA	#$C7
	ORA	#$30
	STA	$FF01
	LDA	$FF03
	ANDA	#$C7
	ORA	#$30
	STA	$FF03
* Enable sound output
	LDA	$FF23
	ANDA	#$C7
	ORA	#$38
	STA	$FF23
* Init timer interrupt generation
	LDD	#TIMEVAL
	STD	$FF94
	LDA	$FF91
	ORA	#$20
	STA	$FF91
	LDA	$FF92
	ORA	#$20
	STA	$FF92
	LDA	$FF90
	ORA	#$20
	STA	$FF90
* Enable IRQ handling
	LDD	#SNDISR
	STD	IRQADR
	ANDCC	#$EF

* Init sample storage
	CLRA
	CLRB
	STD	>SAMPLE

INLOOP	JSR	[$A000]
	BEQ	INLOOP
	CMPA	#$03
	BEQ	EXIT
	BRA	INLOOP

EXIT	JMP	[$FFFE]

* Read samples and stuff them into the DAC
SNDISR	LDD	>SAMPLE
	CMPA	#$00
	BEQ	SNDISR1
	CLRA
	ANDB	#$7C
	STB	$FF20
	BRA	SNDISR4
SNDISR1	LDX	#$FFE0
	LDA	1,X
	BEQ	SNDISR5
	LDA	,X
*
*	PSHS	A
*
* Convert 2x4-bit to 2x8-bit
	BMI	SNDISR2
	LDY	#CLWLOTB
	BRA	SNDISR3
SNDISR2	EQU	*
	LDY	#CLWHITB
	ANDA	$#7F
SNDISR3	EQU	*
	LDD	A,Y
* End 2x4-bit to 2x8-bit conversion
*
*	PULS	A
*
	ANDA	#$7C
	STA	$FF20
	LDA	#$FF	
*
*	CLRA
*
* Clear timer interrupt
SNDISR4	STD	>SAMPLE
SNDISR5	LDB	$FF92
	RTI

CLWLOTB	FDB	$0000,$0040,$0060,$0070,$0078,$007C,$007E,$007F
	FDB	$0080,$0081,$0083,$0087,$008F,$009F,$00BF,$00FF
	FDB	$4000,$4040,$4060,$4070,$4078,$407C,$407E,$407F
	FDB	$4080,$4081,$4083,$4087,$408F,$409F,$40BF,$40FF
	FDB	$6000,$6040,$6060,$6070,$6078,$607C,$607E,$607F
	FDB	$6080,$6081,$6083,$6087,$608F,$609F,$60BF,$60FF
	FDB	$7000,$7040,$7060,$7070,$7078,$707C,$707E,$707F
	FDB	$7080,$7081,$7083,$7087,$708F,$709F,$70BF,$70FF
	FDB	$7800,$7840,$7860,$7870,$7878,$787C,$787E,$787F
	FDB	$7880,$7881,$7883,$7887,$788F,$789F,$78BF,$78FF
	FDB	$7C00,$7C40,$7C60,$7C70,$7C78,$7C7C,$7C7E,$7C7F
	FDB	$7C80,$7C81,$7C83,$7C87,$7C8F,$7C9F,$7CBF,$7CFF
	FDB	$7E00,$7E40,$7E60,$7E70,$7E78,$7E7C,$7E7E,$7E7F
	FDB	$7E80,$7E81,$7E83,$7E87,$7E8F,$7E9F,$7EBF,$7EFF
	FDB	$7F00,$7F40,$7F60,$7F70,$7F78,$7F7C,$7F7E,$7F7F
	FDB	$7F80,$7F81,$7F83,$7F87,$7F8F,$7F9F,$7FBF,$7FFF

CLWHITB	FDB	$8000,$8040,$8060,$8070,$8078,$807C,$807E,$807F
	FDB	$8080,$8081,$8083,$8087,$808F,$809F,$80BF,$80FF
	FDB	$8100,$8140,$8160,$8170,$8178,$817C,$817E,$817F
	FDB	$8180,$8181,$8183,$8187,$818F,$819F,$81BF,$81FF
	FDB	$8300,$8340,$8360,$8370,$8378,$837C,$837E,$837F
	FDB	$8380,$8381,$8383,$8387,$838F,$839F,$83BF,$83FF
	FDB	$8700,$8740,$8760,$8770,$8778,$877C,$877E,$877F
	FDB	$8780,$8781,$8783,$8787,$878F,$879F,$87BF,$87FF
	FDB	$8F00,$8F40,$8F60,$8F70,$8F78,$8F7C,$8F7E,$8F7F
	FDB	$8F80,$8F81,$8F83,$8F87,$8F8F,$8F9F,$8FBF,$8FFF
	FDB	$9F00,$9F40,$9F60,$9F70,$9F78,$9F7C,$9F7E,$9F7F
	FDB	$9F80,$9F81,$9F83,$9F87,$9F8F,$9F9F,$9FBF,$9FFF
	FDB	$BF00,$BF40,$BF60,$BF70,$BF78,$BF7C,$BF7E,$BF7F
	FDB	$BF80,$BF81,$BF83,$BF87,$BF8F,$BF9F,$BFBF,$BFFF
	FDB	$FF00,$FF40,$FF60,$FF70,$FF78,$FF7C,$FF7E,$FF7F
	FDB	$FF80,$FF81,$FF83,$FF87,$FF8F,$FF9F,$FFBF,$FFFF

SAMPLE	RMB	2

	END	EXEC
