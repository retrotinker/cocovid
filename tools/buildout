#!/bin/sh

PPM=0
RAW=0
RLE=0
DRW=0
DRL=0
PCM=0

FRAMESKIP=3
SAMPLES=1103
PCMFACTOR=1

MAXSCORE=4608

MOV2PPM=~/git/cocovid/tools/mov2ppm
PPM2RAW=~/git/cocovid/tools/ppm2raw
RAW2RLE=~/git/cocovid/tools/raw2rle
RAW2RLI=~/git/cocovid/tools/raw2rli
RAW2DRW=~/git/cocovid/tools/raw2drw
DRW2DRL=~/git/cocovid/tools/drw2drl
DRL2RAW=~/git/cocovid/tools/drl2raw
WAV2PCM=~/git/cocovid/tools/wav2pcm
SPLITPCM=~/git/cocovid/tools/splitpcm
DRLSCORE=~/git/cocovid/tools/drlscore

if [ $PPM -ne 0 ]
then
	echo Converting .mov file to a sequence of .ppm files...
	mkdir -p ../ppm/"$1"
	cd ../ppm/"$1"
	rm -f *
	$MOV2PPM ../../mov/"$1".mov >/dev/null 2>&1
	FRAMES=$(ls | wc -l)
	cd - >/dev/null
else
	cd ../ppm/"$1"
	FRAMES=$(ls | wc -l)
	cd - >/dev/null
fi

if [ $RAW -ne 0 ]
then
	echo Converting .ppm files to .raw files...
	mkdir -p ../raw/"$1"
	cd ../raw/"$1"
	rm -f *
	for i in ../../ppm/"$1"/*
	do
	$PPM2RAW $i $(echo $(basename $i) | sed -e 's/ppm$/raw/')
	done
	cd - >/dev/null
fi

if [ $RLE -ne 0 ]
then
	echo Converting .raw files to .rle files...
	mkdir -p ../rle/"$1"
	cd ../rle/"$1"
	rm -f *
	for i in ../../raw/"$1"/*
	do
	$RAW2RLE $i $(echo $(basename $i) | sed -e 's/raw$/rle/')
	done
	cd - >/dev/null
fi

if [ $DRW -ne 0 ]
then
	echo Converting selected .raw files to .drw files...
	mkdir -p ../drw/"$1"
	cd ../drw/"$1"
	rm -f *
	for i in $(seq $(($FRAMESKIP + 1)) $FRAMESKIP $FRAMES)
	do
		$RAW2DRW ../../raw/"$1"/$((i-$FRAMESKIP)).raw \
			../../raw/"$1"/${i}.raw ${i}.drw
	done
	cd - >/dev/null
fi

if [ $DRL -ne 0 ]
then
	echo Converting .drw files to .drl files...
	mkdir -p ../drl/"$1"
	cd ../drl/"$1"
	rm -f *
	for i in $(seq $(($FRAMESKIP + 1)) $FRAMESKIP $FRAMES)
	do
		$DRW2DRL ../../drw/"$1"/${i}.drw ${i}.drl
	done
	cd - >/dev/null
fi

if [ $PCM -ne 0 ]
then
	echo Converting .wav file to .pcm file and split into appropriately sized chunks...
	mkdir -p ../pcm/"$1"
	cd ../pcm/"$1"
	rm -f *
	$WAV2PCM ../../mov/"$1".wav "$1".pcm $PCMFACTOR
	$SPLITPCM "$1".pcm "$1". $SAMPLES 2>/dev/null
	cd - >/dev/null
fi

echo Building final output file...
cp ../rle/"$1"/1.rle "$2"
cat ../pcm/"$1"/*.0 >> "$2"

mkdir -p ../rli/"$1"
cd ../rli/"$1"
rm -f *
cd - >/dev/null

# This bit and all the cp commands in the loop below are really just
# for debugging and can be removed later...
mkdir -p "$1"
rm -f "$1"/*

INTERLACE=0
INTERLACED=0
ILFACTOR=0
NEXTSEQ=0
for i in $(seq $(($FRAMESKIP + 1)) $FRAMESKIP $FRAMES)
do
	RAW=../rle/"$1"/$i.raw
	RLE=../rle/"$1"/$i.rle
	RAWBASE=../raw/"$1"
	RLIBASE=../rli/"$1"
	DRWBASE=../drw/"$1"
	DRL=../drl/"$1"/$i.drl
	DRLBASE=../drl/"$1"
	PCMFILE=../pcm/"$1"/*.$((${i}/$FRAMESKIP))

	RLEWEIGHT=$($DRLSCORE $RLE)
	DRLWEIGHT=$($DRLSCORE $DRL)

	if [ $INTERLACE -ne 0 ]
	then
		$RAW2DRW ${RAWBASE}/current.raw ${RAWBASE}/${i}.raw ${DRWBASE}/current.drw
		$DRW2DRL ${DRWBASE}/current.drw ${DRLBASE}/current.drl
		if [ $($DRLSCORE ${DRLBASE}/current.drl) -lt $MAXSCORE ]
		then
			cat ${DRLBASE}/current.drl
			cp ${DRLBASE}/current.drl "$1"/${i}-current.drl
			INTERLACE=0
		else
			if [ $NEXTSEQ -eq 1 ]
			then
				for ILFACTOR in $(seq 2 95)
				do
					$RAW2RLI ${RAWBASE}/${i}.raw ${RLIBASE}/${i}-1.rli $ILFACTOR 1
					if [ $($DRLSCORE ${RLIBASE}/${i}-1.rli) -le $MAXSCORE ]
					then
						break
					fi
				done
			else
				$RAW2RLI ${RAWBASE}/${i}.raw ${RLIBASE}/${i}-${NEXTSEQ}.rli $ILFACTOR $NEXTSEQ
			fi
			cat ${RLIBASE}/${i}-${NEXTSEQ}.rli
			cp ${RLIBASE}/${i}-${NEXTSEQ}.rli "$1"/
			$DRL2RAW ${RAWBASE}/current.raw ${RLIBASE}/${i}-${NEXTSEQ}.rli ${RAWBASE}/tmp.raw
			mv ${RAWBASE}/tmp.raw ${RAWBASE}/current.raw
			if [ $NEXTSEQ -lt $ILFACTOR ]
			then
				NEXTSEQ=$(($NEXTSEQ + 1))
			else
				NEXTSEQ=1
			fi
			INTERLACED=$(($INTERLACED + 1))
		fi
	elif [ $RLEWEIGHT -gt $MAXSCORE -a $DRLWEIGHT -gt $MAXSCORE ]
	then
		for ILFACTOR in $(seq 2 95)
		do
			$RAW2RLI ${RAWBASE}/${i}.raw ${RLIBASE}/${i}-1.rli $ILFACTOR 1
			if [ $($DRLSCORE ${RLIBASE}/${i}-1.rli) -le $MAXSCORE ]
			then
				break
			fi
		done
		cat ${RLIBASE}/${i}-1.rli
		cp ${RLIBASE}/${i}-1.rli "$1"/
		NEXTSEQ=2
		INTERLACED=$(($INTERLACED + 1))
		if [ $i -eq 1 ]
		then
			LASTFRAME=1
		else
			LASTFRAME=$(($i - $FRAMESKIP))
		fi
		$DRL2RAW ${RAWBASE}/${LASTFRAME}.raw ${RLIBASE}/${i}-1.rli ${RAWBASE}/current.raw
		INTERLACE=1
	elif [ $RLEWEIGHT -le $MAXSCORE -a $RLEWEIGHT -lt $DRLWEIGHT ]
	then
		cat $RLE
		cp $RLE "$1"/
	else
		cat $DRL
		cp $DRL "$1"/
	fi
	if [ -f $PCMFILE ]
	then
		cat $PCMFILE
		cp $PCMFILE "$1"/
		PCMSIZE=$(stat -c '%s' $PCMFILE)
		if [ $PCMSIZE -lt $SAMPLES ]
		then
			dd if=/dev/zero bs=$(($SAMPLES - $PCMSIZE)) count=1 2>/dev/null
			dd of="$1"/${i}-extra.pcm if=/dev/zero bs=$(($SAMPLES - $PCMSIZE)) count=1 2>/dev/null
		fi
	else
		# This actually holds DAC at lowest value...
		# ...should output 0x88 ("CoCo Law" virtual zero) instead?
		dd if=/dev/zero bs=$SAMPLES count=1 2>/dev/null
		dd of="$1"/${i}.pcm if=/dev/zero bs=$SAMPLES count=1 2>/dev/null
	fi
done >> "$2"

echo Done!  \(Interlaced $INTERLACED of $(($FRAMES / $FRAMESKIP)) frames\)
